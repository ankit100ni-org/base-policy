name: base

on:
  repository_dispatch:
    types: [base]
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      parameter1: ${{ github.event.client_payload.parameter1 }}
      parameter2: ${{ github.event.client_payload.parameter2 }}

    steps:

      - uses: actions/checkout@v3

      - name: Base Policy Update
        run: |
          echo "$parameter1"
          echo "$parameter2"
          json_data=${{vars.ORG_DETAILS}}
          echo $json_data
          # policy_file_name=$(echo "$(basename "$(find . -type f -exec grep -l "^include_policy" {} + )")")
          # static_org=$(cat $policy_file_name | grep "^default_source :chef_server" | cut -d '/' -f 5)
          # echo "$json_data" | jq -r 'to_entries[] | "\(.key) \(.value.client_name) \(.value.client_key_name) \(.value.org_name)"' | while read -r org client_name client_key_name org_name; do
          #   cp $policy_file_name "${org_name}_${policy_file_name}"
          #   tmp_policy_file="${org_name}_${policy_file_name}"
          #   echo "Updating the Base Policyfiles org name in Chef server url"
          #   awk '/^default_source :chef_server/ {sub(/$static_org/, "'"${org_name}"'")} 1' "${tmp_policy_file}" > "${tmp_policy_file}.tmp" && mv "${tmp_policy_file}.tmp" "${tmp_policy_file}"
          #   awk '/^include_policy/ {sub(/production/, "'"${parameter2}"'")} 1' "${tmp_policy_file}" > "${tmp_policy_file}.tmp" && mv "${tmp_policy_file}.tmp" "${tmp_policy_file}"
          #   awk '/^include_policy/ {sub(/$static_org/, "'"${org_name}"'")} 1' "${tmp_policy_file}" > "${tmp_policy_file}.tmp" && mv "${tmp_policy_file}.tmp" "${tmp_policy_file}"

          #   echo "=========================="
          #   cat ${tmp_policy_file}
          #   echo "=========================="
          #   echo "let's run chef commands"
          #   # Connect to Chef server using knife ssl fetch
          #   # Terraform creation
          #   # Node bootstrap 
          #   # converge
          #   rm $tmp_policy_file
          # done



